#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
public partial class ShowDetailDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertTutorial(Tutorial instance);
  partial void UpdateTutorial(Tutorial instance);
  partial void DeleteTutorial(Tutorial instance);
  #endregion
	
	public ShowDetailDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConnStringDb"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public ShowDetailDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ShowDetailDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ShowDetailDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ShowDetailDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Tutorial> Tutorials
	{
		get
		{
			return this.GetTable<Tutorial>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tutorial")]
public partial class Tutorial : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _UniversityName;
	
	private string _Department;
	
	private string _Subject;
	
	private string _Topic;
	
	private string _Description;
	
	private string _link;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUniversityNameChanging(string value);
    partial void OnUniversityNameChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnTopicChanging(string value);
    partial void OnTopicChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    #endregion
	
	public Tutorial()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversityName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string UniversityName
	{
		get
		{
			return this._UniversityName;
		}
		set
		{
			if ((this._UniversityName != value))
			{
				this.OnUniversityNameChanging(value);
				this.SendPropertyChanging();
				this._UniversityName = value;
				this.SendPropertyChanged("UniversityName");
				this.OnUniversityNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string Department
	{
		get
		{
			return this._Department;
		}
		set
		{
			if ((this._Department != value))
			{
				this.OnDepartmentChanging(value);
				this.SendPropertyChanging();
				this._Department = value;
				this.SendPropertyChanged("Department");
				this.OnDepartmentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
	public string Topic
	{
		get
		{
			return this._Topic;
		}
		set
		{
			if ((this._Topic != value))
			{
				this.OnTopicChanging(value);
				this.SendPropertyChanging();
				this._Topic = value;
				this.SendPropertyChanged("Topic");
				this.OnTopicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="VarChar(500)")]
	public string link
	{
		get
		{
			return this._link;
		}
		set
		{
			if ((this._link != value))
			{
				this.OnlinkChanging(value);
				this.SendPropertyChanging();
				this._link = value;
				this.SendPropertyChanged("link");
				this.OnlinkChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
